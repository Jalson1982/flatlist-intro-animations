{"version":3,"sources":["AnimatedFlatList.tsx"],"names":["React","FlatList","SlideFromBottomAnimatedItem","SlideFromRightAnimatedItem","FadeAnimatedItem","AnimationType","RotateAnimatedItem","DiveAnimatedItem","AnimatedFlatList","data","renderItem","animationType","animationDuration","focused","handleRenderItem","args","SlideFromBottom","SlideFromRight","Fade","Rotate","Dive","item","index","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA6C,cAA7C;AAEA,SACEC,2BADF,EAEEC,0BAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,GAPP;;AAiBA,MAAMC,gBAAiC,GAAG,CAAC;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA,UAFyC;AAGzCC,EAAAA,aAHyC;AAIzCC,EAAAA,iBAJyC;AAKzCC,EAAAA;AALyC,CAAD,KAMpC;AACJ,QAAMC,gBAAqB,GAAIC,IAAD,IAAmC;AAC/D,YAAQJ,aAAR;AACE,WAAKN,aAAa,CAACW,eAAnB;AACE,4BACE,oBAAC,2BAAD;AACE,UAAA,UAAU,EAAEN,UADd;AAEE,UAAA,IAAI,EAAEK,IAFR;AAGE,UAAA,OAAO,EAAEF;AAHX,UADF;;AAOF,WAAKR,aAAa,CAACY,cAAnB;AACE,4BACE,oBAAC,0BAAD;AACE,UAAA,UAAU,EAAEP,UADd;AAEE,UAAA,IAAI,EAAEK,IAFR;AAGE,UAAA,OAAO,EAAEF;AAHX,UADF;;AAOF,WAAKR,aAAa,CAACa,IAAnB;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,UAAU,EAAER,UADd;AAEE,UAAA,IAAI,EAAEK,IAFR;AAGE,UAAA,iBAAiB,EAAEH,iBAHrB;AAIE,UAAA,OAAO,EAAEC;AAJX,UADF;;AAQF,WAAKR,aAAa,CAACc,MAAnB;AACE,4BACE,oBAAC,kBAAD;AACE,UAAA,UAAU,EAAET,UADd;AAEE,UAAA,IAAI,EAAEK,IAFR;AAGE,UAAA,iBAAiB,EAAEH,iBAHrB;AAIE,UAAA,OAAO,EAAEC;AAJX,UADF;;AAQF,WAAKR,aAAa,CAACe,IAAnB;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,UAAU,EAAEV,UADd;AAEE,UAAA,IAAI,EAAEK,IAFR;AAGE,UAAA,OAAO,EAAEF;AAHX,UADF;;AAOF;AACE;AA5CJ;AA8CD,GA/CD;;AAiDA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,UAAU,EAAEK,gBAFd;AAGE,IAAA,YAAY,EAAE,CAACO,IAAD,EAAOC,KAAP,KAAiBA,KAAK,CAACC,QAAN;AAHjC,IADF;AAOD,CA/DD;;AAiEA,eAAef,gBAAf","sourcesContent":["import React from 'react';\nimport { FlatList, ListRenderItemInfo } from 'react-native';\n\nimport {\n  SlideFromBottomAnimatedItem,\n  SlideFromRightAnimatedItem,\n  FadeAnimatedItem,\n  AnimationType,\n  RotateAnimatedItem,\n  DiveAnimatedItem,\n} from '.';\n\ninterface Props {\n  data: Array<any>;\n  renderItem: (item: any) => JSX.Element;\n  animationType: AnimationType;\n  animationDuration?: number;\n  focused?: boolean;\n}\n\nconst AnimatedFlatList: React.FC<Props> = ({\n  data,\n  renderItem,\n  animationType,\n  animationDuration,\n  focused,\n}) => {\n  const handleRenderItem: any = (args: ListRenderItemInfo<any>) => {\n    switch (animationType) {\n      case AnimationType.SlideFromBottom:\n        return (\n          <SlideFromBottomAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.SlideFromRight:\n        return (\n          <SlideFromRightAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.Fade:\n        return (\n          <FadeAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            animationDuration={animationDuration}\n            focused={focused}\n          />\n        );\n      case AnimationType.Rotate:\n        return (\n          <RotateAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            animationDuration={animationDuration}\n            focused={focused}\n          />\n        );\n      case AnimationType.Dive:\n        return (\n          <DiveAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      default:\n        return;\n    }\n  };\n\n  return (\n    <FlatList\n      data={data}\n      renderItem={handleRenderItem}\n      keyExtractor={(item, index) => index.toString()}\n    />\n  );\n};\n\nexport default AnimatedFlatList;\n"]}