{"version":3,"sources":["AnimatedFlatList.tsx"],"names":["React","FlatList","SlideFromBottomAnimatedItem","SlideFromRightAnimatedItem","FadeAnimatedItem","AnimationType","RotateAnimatedItem","DiveAnimatedItem","AnimatedFlatList","data","renderItem","animationType","animationDuration","focused","flatlistRef","onScroll","refreshing","onRefresh","keyExtractor","handleRenderItem","args","SlideFromBottom","SlideFromRight","Fade","Rotate","Dive"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,QAKO,cALP;AAOA,SACEC,2BADF,EAEEC,0BAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,GAPP;;AAwBA,MAAMC,gBAAiC,GAAG,CAAC;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA,UAFyC;AAGzCC,EAAAA,aAHyC;AAIzCC,EAAAA,iBAJyC;AAKzCC,EAAAA,OALyC;AAMzCC,EAAAA,WANyC;AAOzCC,EAAAA,QAPyC;AAQzCC,EAAAA,UARyC;AASzCC,EAAAA,SATyC;AAUzCC,EAAAA;AAVyC,CAAD,KAWpC;AACJ,QAAMC,gBAAqB,GAAIC,IAAD,IAAmC;AAC/D,YAAQT,aAAR;AACE,WAAKN,aAAa,CAACgB,eAAnB;AACE,4BACE,oBAAC,2BAAD;AACE,UAAA,UAAU,EAAEX,UADd;AAEE,UAAA,IAAI,EAAEU,IAFR;AAGE,UAAA,OAAO,EAAEP;AAHX,UADF;;AAOF,WAAKR,aAAa,CAACiB,cAAnB;AACE,4BACE,oBAAC,0BAAD;AACE,UAAA,UAAU,EAAEZ,UADd;AAEE,UAAA,IAAI,EAAEU,IAFR;AAGE,UAAA,OAAO,EAAEP;AAHX,UADF;;AAOF,WAAKR,aAAa,CAACkB,IAAnB;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,UAAU,EAAEb,UADd;AAEE,UAAA,IAAI,EAAEU,IAFR;AAGE,UAAA,iBAAiB,EAAER,iBAHrB;AAIE,UAAA,OAAO,EAAEC;AAJX,UADF;;AAQF,WAAKR,aAAa,CAACmB,MAAnB;AACE,4BACE,oBAAC,kBAAD;AACE,UAAA,UAAU,EAAEd,UADd;AAEE,UAAA,IAAI,EAAEU,IAFR;AAGE,UAAA,iBAAiB,EAAER,iBAHrB;AAIE,UAAA,OAAO,EAAEC;AAJX,UADF;;AAQF,WAAKR,aAAa,CAACoB,IAAnB;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,UAAU,EAAEf,UADd;AAEE,UAAA,IAAI,EAAEU,IAFR;AAGE,UAAA,OAAO,EAAEP;AAHX,UADF;;AAOF;AACE;AA5CJ;AA8CD,GA/CD;;AAiDA,sBACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEC,WADP;AAEE,IAAA,IAAI,EAAEL,IAFR;AAGE,IAAA,UAAU,EAAEU,gBAHd;AAIE,IAAA,UAAU,EAAEH,UAJd;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,QAAQ,EAAEF,QANZ;AAOE,IAAA,YAAY,EAAEG;AAPhB,IADF;AAWD,CAxED;;AA0EA,eAAeV,gBAAf","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  ListRenderItemInfo,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n} from 'react-native';\n\nimport {\n  SlideFromBottomAnimatedItem,\n  SlideFromRightAnimatedItem,\n  FadeAnimatedItem,\n  AnimationType,\n  RotateAnimatedItem,\n  DiveAnimatedItem,\n} from '.';\n\ninterface Props {\n  data: Array<any>;\n  renderItem: (item: any) => JSX.Element;\n  animationType: AnimationType;\n  animationDuration?: number;\n  focused?: boolean;\n  flatlistRef?:\n    | ((instance: FlatList<object> | null) => void)\n    | React.RefObject<FlatList<object>>;\n  onScroll?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n  refreshing?: boolean;\n  onRefresh?: () => void;\n  keyExtractor?: (item: object, index: number) => string;\n}\n\nconst AnimatedFlatList: React.FC<Props> = ({\n  data,\n  renderItem,\n  animationType,\n  animationDuration,\n  focused,\n  flatlistRef,\n  onScroll,\n  refreshing,\n  onRefresh,\n  keyExtractor,\n}) => {\n  const handleRenderItem: any = (args: ListRenderItemInfo<any>) => {\n    switch (animationType) {\n      case AnimationType.SlideFromBottom:\n        return (\n          <SlideFromBottomAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.SlideFromRight:\n        return (\n          <SlideFromRightAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.Fade:\n        return (\n          <FadeAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            animationDuration={animationDuration}\n            focused={focused}\n          />\n        );\n      case AnimationType.Rotate:\n        return (\n          <RotateAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            animationDuration={animationDuration}\n            focused={focused}\n          />\n        );\n      case AnimationType.Dive:\n        return (\n          <DiveAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      default:\n        return;\n    }\n  };\n\n  return (\n    <FlatList\n      ref={flatlistRef}\n      data={data}\n      renderItem={handleRenderItem}\n      refreshing={refreshing}\n      onRefresh={onRefresh}\n      onScroll={onScroll}\n      keyExtractor={keyExtractor}\n    />\n  );\n};\n\nexport default AnimatedFlatList;\n"]}